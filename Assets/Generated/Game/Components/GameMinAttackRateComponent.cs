//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public _Core_.Common.Components.MinAttackRateComponent minAttackRate { get { return (_Core_.Common.Components.MinAttackRateComponent)GetComponent(GameComponentsLookup.MinAttackRate); } }
    public bool hasMinAttackRate { get { return HasComponent(GameComponentsLookup.MinAttackRate); } }

    public void AddMinAttackRate(float newValue) {
        var index = GameComponentsLookup.MinAttackRate;
        var component = (_Core_.Common.Components.MinAttackRateComponent)CreateComponent(index, typeof(_Core_.Common.Components.MinAttackRateComponent));
        component.value = newValue;
        AddComponent(index, component);
    }

    public void ReplaceMinAttackRate(float newValue) {
        var index = GameComponentsLookup.MinAttackRate;
        var component = (_Core_.Common.Components.MinAttackRateComponent)CreateComponent(index, typeof(_Core_.Common.Components.MinAttackRateComponent));
        component.value = newValue;
        ReplaceComponent(index, component);
    }

    public void RemoveMinAttackRate() {
        RemoveComponent(GameComponentsLookup.MinAttackRate);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherMinAttackRate;

    public static Entitas.IMatcher<GameEntity> MinAttackRate {
        get {
            if (_matcherMinAttackRate == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.MinAttackRate);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherMinAttackRate = matcher;
            }

            return _matcherMinAttackRate;
        }
    }
}
