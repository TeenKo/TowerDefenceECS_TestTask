//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public _Core_.ObjectPool.Components.TotalSizeComponent totalSize { get { return (_Core_.ObjectPool.Components.TotalSizeComponent)GetComponent(GameComponentsLookup.TotalSize); } }
    public bool hasTotalSize { get { return HasComponent(GameComponentsLookup.TotalSize); } }

    public void AddTotalSize(int newValue) {
        var index = GameComponentsLookup.TotalSize;
        var component = (_Core_.ObjectPool.Components.TotalSizeComponent)CreateComponent(index, typeof(_Core_.ObjectPool.Components.TotalSizeComponent));
        component.value = newValue;
        AddComponent(index, component);
    }

    public void ReplaceTotalSize(int newValue) {
        var index = GameComponentsLookup.TotalSize;
        var component = (_Core_.ObjectPool.Components.TotalSizeComponent)CreateComponent(index, typeof(_Core_.ObjectPool.Components.TotalSizeComponent));
        component.value = newValue;
        ReplaceComponent(index, component);
    }

    public void RemoveTotalSize() {
        RemoveComponent(GameComponentsLookup.TotalSize);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherTotalSize;

    public static Entitas.IMatcher<GameEntity> TotalSize {
        get {
            if (_matcherTotalSize == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.TotalSize);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherTotalSize = matcher;
            }

            return _matcherTotalSize;
        }
    }
}
