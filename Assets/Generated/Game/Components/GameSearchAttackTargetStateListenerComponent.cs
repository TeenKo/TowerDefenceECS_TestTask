//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public SearchAttackTargetStateListenerComponent searchAttackTargetStateListener { get { return (SearchAttackTargetStateListenerComponent)GetComponent(GameComponentsLookup.SearchAttackTargetStateListener); } }
    public bool hasSearchAttackTargetStateListener { get { return HasComponent(GameComponentsLookup.SearchAttackTargetStateListener); } }

    public void AddSearchAttackTargetStateListener(System.Collections.Generic.List<ISearchAttackTargetStateListener> newValue) {
        var index = GameComponentsLookup.SearchAttackTargetStateListener;
        var component = (SearchAttackTargetStateListenerComponent)CreateComponent(index, typeof(SearchAttackTargetStateListenerComponent));
        component.value = newValue;
        AddComponent(index, component);
    }

    public void ReplaceSearchAttackTargetStateListener(System.Collections.Generic.List<ISearchAttackTargetStateListener> newValue) {
        var index = GameComponentsLookup.SearchAttackTargetStateListener;
        var component = (SearchAttackTargetStateListenerComponent)CreateComponent(index, typeof(SearchAttackTargetStateListenerComponent));
        component.value = newValue;
        ReplaceComponent(index, component);
    }

    public void RemoveSearchAttackTargetStateListener() {
        RemoveComponent(GameComponentsLookup.SearchAttackTargetStateListener);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherSearchAttackTargetStateListener;

    public static Entitas.IMatcher<GameEntity> SearchAttackTargetStateListener {
        get {
            if (_matcherSearchAttackTargetStateListener == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.SearchAttackTargetStateListener);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherSearchAttackTargetStateListener = matcher;
            }

            return _matcherSearchAttackTargetStateListener;
        }
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.EventEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public void AddSearchAttackTargetStateListener(ISearchAttackTargetStateListener value) {
        var listeners = hasSearchAttackTargetStateListener
            ? searchAttackTargetStateListener.value
            : new System.Collections.Generic.List<ISearchAttackTargetStateListener>();
        listeners.Add(value);
        ReplaceSearchAttackTargetStateListener(listeners);
    }

    public void RemoveSearchAttackTargetStateListener(ISearchAttackTargetStateListener value, bool removeComponentWhenEmpty = true) {
        var listeners = searchAttackTargetStateListener.value;
        listeners.Remove(value);
        if (removeComponentWhenEmpty && listeners.Count == 0) {
            RemoveSearchAttackTargetStateListener();
        } else {
            ReplaceSearchAttackTargetStateListener(listeners);
        }
    }
}
