//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public IdleStateListenerComponent idleStateListener { get { return (IdleStateListenerComponent)GetComponent(GameComponentsLookup.IdleStateListener); } }
    public bool hasIdleStateListener { get { return HasComponent(GameComponentsLookup.IdleStateListener); } }

    public void AddIdleStateListener(System.Collections.Generic.List<IIdleStateListener> newValue) {
        var index = GameComponentsLookup.IdleStateListener;
        var component = (IdleStateListenerComponent)CreateComponent(index, typeof(IdleStateListenerComponent));
        component.value = newValue;
        AddComponent(index, component);
    }

    public void ReplaceIdleStateListener(System.Collections.Generic.List<IIdleStateListener> newValue) {
        var index = GameComponentsLookup.IdleStateListener;
        var component = (IdleStateListenerComponent)CreateComponent(index, typeof(IdleStateListenerComponent));
        component.value = newValue;
        ReplaceComponent(index, component);
    }

    public void RemoveIdleStateListener() {
        RemoveComponent(GameComponentsLookup.IdleStateListener);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherIdleStateListener;

    public static Entitas.IMatcher<GameEntity> IdleStateListener {
        get {
            if (_matcherIdleStateListener == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.IdleStateListener);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherIdleStateListener = matcher;
            }

            return _matcherIdleStateListener;
        }
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.EventEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public void AddIdleStateListener(IIdleStateListener value) {
        var listeners = hasIdleStateListener
            ? idleStateListener.value
            : new System.Collections.Generic.List<IIdleStateListener>();
        listeners.Add(value);
        ReplaceIdleStateListener(listeners);
    }

    public void RemoveIdleStateListener(IIdleStateListener value, bool removeComponentWhenEmpty = true) {
        var listeners = idleStateListener.value;
        listeners.Remove(value);
        if (removeComponentWhenEmpty && listeners.Count == 0) {
            RemoveIdleStateListener();
        } else {
            ReplaceIdleStateListener(listeners);
        }
    }
}
