//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public _Core_.Damage.Components.TakeDamageComponent takeDamage { get { return (_Core_.Damage.Components.TakeDamageComponent)GetComponent(GameComponentsLookup.TakeDamage); } }
    public bool hasTakeDamage { get { return HasComponent(GameComponentsLookup.TakeDamage); } }

    public void AddTakeDamage(float newValue) {
        var index = GameComponentsLookup.TakeDamage;
        var component = (_Core_.Damage.Components.TakeDamageComponent)CreateComponent(index, typeof(_Core_.Damage.Components.TakeDamageComponent));
        component.value = newValue;
        AddComponent(index, component);
    }

    public void ReplaceTakeDamage(float newValue) {
        var index = GameComponentsLookup.TakeDamage;
        var component = (_Core_.Damage.Components.TakeDamageComponent)CreateComponent(index, typeof(_Core_.Damage.Components.TakeDamageComponent));
        component.value = newValue;
        ReplaceComponent(index, component);
    }

    public void RemoveTakeDamage() {
        RemoveComponent(GameComponentsLookup.TakeDamage);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherTakeDamage;

    public static Entitas.IMatcher<GameEntity> TakeDamage {
        get {
            if (_matcherTakeDamage == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.TakeDamage);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherTakeDamage = matcher;
            }

            return _matcherTakeDamage;
        }
    }
}
