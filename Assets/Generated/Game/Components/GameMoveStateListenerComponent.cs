//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public MoveStateListenerComponent moveStateListener { get { return (MoveStateListenerComponent)GetComponent(GameComponentsLookup.MoveStateListener); } }
    public bool hasMoveStateListener { get { return HasComponent(GameComponentsLookup.MoveStateListener); } }

    public void AddMoveStateListener(System.Collections.Generic.List<IMoveStateListener> newValue) {
        var index = GameComponentsLookup.MoveStateListener;
        var component = (MoveStateListenerComponent)CreateComponent(index, typeof(MoveStateListenerComponent));
        component.value = newValue;
        AddComponent(index, component);
    }

    public void ReplaceMoveStateListener(System.Collections.Generic.List<IMoveStateListener> newValue) {
        var index = GameComponentsLookup.MoveStateListener;
        var component = (MoveStateListenerComponent)CreateComponent(index, typeof(MoveStateListenerComponent));
        component.value = newValue;
        ReplaceComponent(index, component);
    }

    public void RemoveMoveStateListener() {
        RemoveComponent(GameComponentsLookup.MoveStateListener);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherMoveStateListener;

    public static Entitas.IMatcher<GameEntity> MoveStateListener {
        get {
            if (_matcherMoveStateListener == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.MoveStateListener);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherMoveStateListener = matcher;
            }

            return _matcherMoveStateListener;
        }
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.EventEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public void AddMoveStateListener(IMoveStateListener value) {
        var listeners = hasMoveStateListener
            ? moveStateListener.value
            : new System.Collections.Generic.List<IMoveStateListener>();
        listeners.Add(value);
        ReplaceMoveStateListener(listeners);
    }

    public void RemoveMoveStateListener(IMoveStateListener value, bool removeComponentWhenEmpty = true) {
        var listeners = moveStateListener.value;
        listeners.Remove(value);
        if (removeComponentWhenEmpty && listeners.Count == 0) {
            RemoveMoveStateListener();
        } else {
            ReplaceMoveStateListener(listeners);
        }
    }
}
